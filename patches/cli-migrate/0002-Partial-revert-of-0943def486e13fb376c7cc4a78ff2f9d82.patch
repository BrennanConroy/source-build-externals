From 959317a76776bbaf039a876a8082cc3664669697 Mon Sep 17 00:00:00 2001
From: Chris Rummel <crummel@microsoft.com>
Date: Mon, 11 Feb 2019 06:19:30 -0600
Subject: [PATCH] Partial revert of 0943def486e13fb376c7cc4a78ff2f9d82e39049 to
 not rely on new CLI features that are unavailable.

---
 .../ProjectMigrator.cs                         |  8 ++++----
 .../MigrateCommand.cs                          | 18 +++++++++---------
 2 files changed, 13 insertions(+), 13 deletions(-)

diff --git a/src/Microsoft.DotNet.ProjectJsonMigration/ProjectMigrator.cs b/src/Microsoft.DotNet.ProjectJsonMigration/ProjectMigrator.cs
index ce24b516..4a13f9c5 100644
--- a/src/Microsoft.DotNet.ProjectJsonMigration/ProjectMigrator.cs
+++ b/src/Microsoft.DotNet.ProjectJsonMigration/ProjectMigrator.cs
@@ -90,9 +90,9 @@ private void DeleteProjectJsons(MigrationSettings rootsettings, IEnumerable<Proj
             {
                 File.Delete(Path.Combine(rootsettings.ProjectDirectory, "project.json"));
             }
-            catch (Exception e)
+            catch (Exception)
             {
-                e.ReportAsWarning();
+                // e.ReportAsWarning();
             }
 
             foreach (var projectDependency in projectDependencies)
@@ -101,9 +101,9 @@ private void DeleteProjectJsons(MigrationSettings rootsettings, IEnumerable<Proj
                 {
                     File.Delete(projectDependency.ProjectFilePath);
                 }
-                catch (Exception e)
+                catch (Exception)
                 {
-                    e.ReportAsWarning();
+                    // e.ReportAsWarning();
                 }
             }
         }
diff --git a/src/Microsoft.DotNet.Tools.MigrateCommand/MigrateCommand.cs b/src/Microsoft.DotNet.Tools.MigrateCommand/MigrateCommand.cs
index 2977d402..4b98b341 100644
--- a/src/Microsoft.DotNet.Tools.MigrateCommand/MigrateCommand.cs
+++ b/src/Microsoft.DotNet.Tools.MigrateCommand/MigrateCommand.cs
@@ -412,7 +412,7 @@ private IEnumerable<string> GetProjectsToMigrate(string projectArg)
 
                 if (!projects.Any())
                 {
-                    throw new GracefulException(LocalizableStrings.MigrationFailedToFindProjectInGlobalJson);
+                    throw new Exception(LocalizableStrings.MigrationFailedToFindProjectInGlobalJson);
                 }
             }
             else if (File.Exists(projectArg) &&
@@ -422,7 +422,7 @@ private IEnumerable<string> GetProjectsToMigrate(string projectArg)
 
                 if (!projects.Any())
                 {
-                    throw new GracefulException(
+                    throw new Exception(
                         string.Format(LocalizableStrings.MigrationUnableToFindProjects, projectArg));
                 }
             }
@@ -432,13 +432,13 @@ private IEnumerable<string> GetProjectsToMigrate(string projectArg)
 
                 if (!projects.Any())
                 {
-                    throw new GracefulException(
+                    throw new Exception(
                         string.Format(LocalizableStrings.MigrationProjectJsonNotFound, projectArg));
                 }
             }
             else
             {
-                throw new GracefulException(
+                throw new Exception(
                     string.Format(LocalizableStrings.MigrationInvalidProjectArgument, projectArg));
             }
 
@@ -452,7 +452,7 @@ private void EnsureNotNull(string variable, string message)
         {
             if (variable == null)
             {
-                throw new GracefulException(message);
+                throw new Exception(message);
             }
         }
 
@@ -465,7 +465,7 @@ private string GetProjectJsonPath(string projectJson)
                 return projectJson;
             }
 
-            throw new GracefulException(string.Format(LocalizableStrings.MigratonUnableToFindProjectJson, projectJson));
+            throw new Exception(string.Format(LocalizableStrings.MigratonUnableToFindProjectJson, projectJson));
         }
 
         private IEnumerable<string> GetProjectsFromGlobalJson(string globalJson)
@@ -497,7 +497,7 @@ private string GetGlobalJsonDirectory(string globalJson)
         {
             if (!File.Exists(globalJson))
             {
-                throw new GracefulException(
+                throw new Exception(
                     string.Format(LocalizableStrings.MigrationUnableToFindGlobalJson, globalJson));
             }
 
@@ -509,7 +509,7 @@ private IEnumerable<string> GetProjectsFromSolution(string slnPath)
         {
             if (!File.Exists(slnPath))
             {
-                throw new GracefulException(
+                throw new Exception(
                     string.Format(LocalizableStrings.MigrationUnableToFindSolutionFile, slnPath));
             }
 
@@ -529,4 +529,4 @@ private IEnumerable<string> GetProjectsFromSolution(string slnPath)
             }
         }
     }
-}
\ No newline at end of file
+}
-- 
2.18.0

