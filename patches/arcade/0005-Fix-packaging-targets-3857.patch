From 8591e57263d5ede7391c4c74ada6b950e0d7b3f2 Mon Sep 17 00:00:00 2001
From: Matt Mitchell <mmitche@microsoft.com>
Date: Fri, 6 Sep 2019 07:44:24 -0700
Subject: [PATCH 5/5] Fix packaging targets (#3857)

* Add a test for final version kind == release for packaging targets
---
 .../MinimalRepoTests.cs                          | 16 ++++++++++++++--
 .../RepoWithConditionalProjectsToBuildTests.cs   | 12 ++++++++----
 .../src/build/Packaging.targets                  |  4 ++--
 3 files changed, 24 insertions(+), 8 deletions(-)

diff --git a/src/Microsoft.DotNet.Arcade.Sdk.Tests/MinimalRepoTests.cs b/src/Microsoft.DotNet.Arcade.Sdk.Tests/MinimalRepoTests.cs
index 50db0ced..8c7d9ba8 100644
--- a/src/Microsoft.DotNet.Arcade.Sdk.Tests/MinimalRepoTests.cs
+++ b/src/Microsoft.DotNet.Arcade.Sdk.Tests/MinimalRepoTests.cs
@@ -23,11 +23,23 @@ public MinimalRepoTests(ITestOutputHelper output, TestProjectFixture fixture)
         public void MinimalRepoBuildsWithoutErrors()
         {
             var app = _fixture.CreateTestApp("MinimalRepo");
-            var exitCode = app.ExecuteBuild(_output, 
+            var exitCode = app.ExecuteBuild(_output,
                 // these properties are required for projects that are not in a git repo
-                "/p:EnableSourceLink=false", 
+                "/p:EnableSourceLink=false",
                 "/p:EnableSourceControlManagerQueries=false");
             Assert.Equal(0, exitCode);
         }
+
+        [Fact]
+        public void MinimalRepoWithFinalVersions()
+        {
+            var app = _fixture.CreateTestApp("MinimalRepo");
+            var exitCode = app.ExecuteBuild(_output,
+                // these properties are required for projects that are not in a git repo
+                "/p:EnableSourceLink=false",
+                "/p:EnableSourceControlManagerQueries=false",
+                "/p:DotNetFinalVersionKind=release");
+            Assert.Equal(0, exitCode);
+        }
     }
 }
diff --git a/src/Microsoft.DotNet.Arcade.Sdk.Tests/RepoWithConditionalProjectsToBuildTests.cs b/src/Microsoft.DotNet.Arcade.Sdk.Tests/RepoWithConditionalProjectsToBuildTests.cs
index 345520bd..eab61085 100644
--- a/src/Microsoft.DotNet.Arcade.Sdk.Tests/RepoWithConditionalProjectsToBuildTests.cs
+++ b/src/Microsoft.DotNet.Arcade.Sdk.Tests/RepoWithConditionalProjectsToBuildTests.cs
@@ -23,20 +23,24 @@ public RepoWithConditionalProjectsToBuildTests(ITestOutputHelper output, TestPro
         }
 
         [Theory]
-        [InlineData(false, 1)]
-        [InlineData(true, 2)]
-        public void RepoProducesPackages(bool buildAdditionalProject, int expectedPackages)
+        [InlineData(false, 1, false)]
+        [InlineData(false, 1, true)]
+        [InlineData(true, 2, false)]
+        [InlineData(true, 2, true)]
+        public void RepoProducesPackages(bool buildAdditionalProject, int expectedPackages, bool stablePackages)
         {
             var app = _fixture.CreateTestApp("RepoWithConditionalProjectsToBuild");
             var packArg = RuntimeInformation.IsOSPlatform(OSPlatform.Windows)
                 ? "-pack"
                 : "--pack";
+            var finalVersionKindarg = stablePackages ? "/p:DotNetFinalVersionKind=release" : "/p:DotNetFinalVersionKind=prerelease";
             var exitCode = app.ExecuteBuild(_output,
                 packArg,
                 $"/p:ShouldBuildMaybe={buildAdditionalProject}",
                 // these properties are required for projects that are not in a git repo
                 "/p:EnableSourceLink=false",
-                "/p:EnableSourceControlManagerQueries=false");
+                "/p:EnableSourceControlManagerQueries=false",
+                finalVersionKindarg);
             Assert.Equal(0, exitCode);
             var nupkgFiles = Directory.GetFiles(Path.Combine(app.WorkingDirectory, "artifacts", "packages", "Debug", "Shipping"), "*.nupkg");
 
diff --git a/src/Microsoft.DotNet.Build.Tasks.Packaging/src/build/Packaging.targets b/src/Microsoft.DotNet.Build.Tasks.Packaging/src/build/Packaging.targets
index 156dbcd3..1dad25df 100644
--- a/src/Microsoft.DotNet.Build.Tasks.Packaging/src/build/Packaging.targets
+++ b/src/Microsoft.DotNet.Build.Tasks.Packaging/src/build/Packaging.targets
@@ -734,7 +734,7 @@
     </ApplyBaseLine>
 
     <Error Text="No VersionSuffix was set. Ensure it is set before targets in packaging are ran."
-           Condition="'$(VersionSuffix)' == ''" />
+           Condition="'$(VersionSuffix)' == '' AND '@(_BaseLinedDependencies)' != ''" />
     <Error Condition="'@(_BaseLinedDependencies)' != '' AND '@(PackageIndex)' == '' AND '@(StablePackage)' == ''"
            Text="Neither PackageIndex nor StablePackage items are defined: ensure you have imported Microsoft.Private.PackageBaseLine.props from the Microsoft.Private.PackageBaseLine package" />
     <ApplyPreReleaseSuffix Condition="'@(_BaseLinedDependencies)' != ''"
@@ -826,7 +826,7 @@
         DependsOnTargets="GetAssemblyVersionFromProjects">
 
     <Error Text="No VersionSuffix was set. Ensure it is set before targets in packaging are ran."
-           Condition="'$(VersionSuffix)' == ''" />
+           Condition="'$(VersionSuffix)' == '' AND '$(StableVersion)' == ''" />
 
     <Error Text="No version could be detected.  Either specify the Version property or provide at least one managed assembly."
            Condition="'$(PackageVersion)' == '' AND '$(_AssemblyVersion)' == ''" />
-- 
2.18.0

