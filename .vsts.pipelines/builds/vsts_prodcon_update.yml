jobs:
- job: vsts_prodcon_update
  pool:
    name: Hosted VS2017
  timeoutInMinutes: 180
  variables:
    # autoUpdate.skipBuildToolsUpdate: (User input: Should the BuildTools update be skipped? This is useful to isolate the update to ProdCon.)
    # pb.feed.replaceNew: (User input for ProdConBlobFeedReplaceNew.)
    # pb.feed.replaceOld: (User input for ProdConBlobFeedReplaceOld.)
    # pb.manifest.branch: (User input e.g. orchestrated-release-2-1)
    # pb.manifest.build: (User input e.g. 20180102-03)
    # pb.manifest.prefix: (User input e.g. https://dotnetfeed.blob.core.windows.net/)
    # user.dncengPAT: (User input: PAT for pushing commit and opening PR.)
    # user.PAT: (User input: PAT for fetching submodule commits.)
    CommitMessage: Update to ProdCon $(pb.manifest.build)
    logsDirectory: $(Build.ArtifactStagingDirectory)/logs
    manifestFile: $(Build.BinariesDirectory)\build.xml
    pb.manifest.buildXmlPath: final/assets/orchestration-metadata/manifests/build.xml
    pb.manifest.url: $(pb.manifest.prefix)$(pb.manifest.branch)/$(pb.manifest.build)/$(pb.manifest.buildXmlPath)

  steps:
  - powershell: |
      $prefix = "refs/heads/"
      $branch = "$(Build.SourceBranch)"
      $branchName = $branch
      if ($branchName.StartsWith($prefix))
      {
        $branchName = $branchName.Substring($prefix.Length)
      }
      Write-Host "For Build.SourceBranch $branch, FullBranchName is $branchName"
      Write-Host "##vso[task.setvariable variable=FullBranchName;]$branchName"
    displayName: Find true SourceBranchName

  - powershell: |
      Invoke-WebRequest $(pb.manifest.url) -OutFile $(manifestFile)
      echo "Writing all build manifest:"
      cat $(manifestFile)
    displayName: Download build manifest

  - template: ../steps/init-submodules.yml

  - powershell: |
      .\build.cmd /t:InitBuild /p:SkipPatches=true
      .\build.cmd `
        /t:UpdateDependencies `
        /p:SkipBuildToolsUpdate=$(autoUpdate.skipBuildToolsUpdate) `
        /p:UpdateFromManifestFile=$(manifestFile) `
        /p:ProdConBlobFeedReplaceOld=$(pb.feed.replaceOld) `
        /p:ProdConBlobFeedReplaceNew=$(pb.feed.replaceNew) `
        /t:SubmitPullRequestIfChanged `
        /p:MadeChanges=true `
        /p:ProjectRepoOwner=internal `
        /p:ProjectRepoName=dotnet-source-build `
        /p:ProjectRepoBranch=$(FullBranchName) `
        /p:PullRequestServiceType=Vsts `
        /p:VstsInstanceName=dnceng `
        /p:PullRequestAuthToken=$(user.dncengPAT) `
        /p:PullRequestUser=dn-bot `
        /p:PullRequestAuthor=dotnet-bot `
        /p:PullRequestEmail=dotnet-bot@microsoft.com `
        /clp:v=Normal
    displayName: Perform auto-update changes

  # Gather artifacts. Uses git bash on Windows.
  - bash: |
      set -x
      copyWithParents="cp {} --parents"
      # Copy all these files to the logs dir, preserving relative path.
      mkdir -p "$(logsDirectory)"
      find . \( \
        -iname '*.binlog' -o \
        -iname '*.log' \) \
        -exec $copyWithParents "$(logsDirectory)" \;
    displayName: Copy logs to staging directory
    condition: always()
    continueOnError: true

  # Publish artifacts.
  - task: PublishBuildArtifacts@1
    displayName: Publish Logs artifact
    condition: always()
    continueOnError: true
    inputs:
      PathtoPublish: $(logsDirectory)
      ArtifactName: Logs
      ArtifactType: Container

